{
  "JsonUtil": [
    {
      "type": "import",
      "values": ["import { FileExists } from \"./MiscUtil\""]
    },
    {
      "type": "substitute",
      "display": "JsonExists",
      "find": "--s:functionWithBody",
      "file": "JsonUtil.JsonExists.ts"
    },
    {
      "type": "substitute",
      "display": "GetPathBoolValue",
      "find": "--s:functionWithBody",
      "expr": "export const GetPathBoolValue = (FileName: string, Path: string, missing: boolean = false): boolean => GetPathIntValue(FileName, Path, missing ? 1 : 0) != 0"
    }
  ],
  "PapyrusUtil": [
    {
      "type": "substitute",
      "display": "GetScriptVersion",
      "find": "(?isU)export const GetScriptVersion =.*return\\s+(\\d+)\\s+.*endFunction",
      "expr": "export const GetScriptVersion = (): number => $1"
    },
    {
      "type": "substitute",
      "display": "ClearEmpty",
      "find": "--s:functionWithBody",
      "expr": "export const ClearEmpty = (ArrayValues: string[]): string[] => RemoveString(ArrayValues, \"\")"
    },
    {
      "type": "substitute",
      "display": "ClearNone",
      "find": "--s:functionWithBody",
      "expr": "export const ClearNone = (ArrayValues: Form[]): Form[] => RemoveForm(ArrayValues, null)"
    },
    {
      "type": "substitute",
      "display": "CountFalse",
      "find": "--s:functionWithBody",
      "expr": "export const CountFalse = (ArrayValues: boolean[]): number => CountBool(ArrayValues, false)"
    },
    {
      "type": "substitute",
      "display": "CountTrue",
      "find": "--s:functionWithBody",
      "expr": "export const CountTrue = (ArrayValues: boolean[]): number => CountBool(ArrayValues, true)"
    },
    {
      "type": "substitute",
      "display": "CountNone",
      "find": "--s:functionWithBody",
      "expr": "export const CountNone = (ArrayValues: Form[]): number => CountForm(ArrayValues, null)"
    },
    {
      "type": "substitute",
      "find": "(?is)\\/\\*\\* ##\\n\\* ## Non-Native bool versions of some .*\\*\\/(.*)$",
      "expr": "/* NO LONGER NEEDED IN TYPESCRIPT$1*/",
      "comment1": "This will comment functions requiring manual translation, but no longer",
      "comment2": "really needed since we are now using Typescript"
    },
    {
      "type": "headerComment",
      "file": "PapyrusUtil.comment.txt",
      "comment": "Header talking about general changes to this file"
    }
  ],
  "PO3_SKSEFunctions": [
    {
      "type": "import",
      "file": "PO3_SKSEFunctions.NewForms.ts",
      "comment": "Declaration of the new custom types"
    },
    {
      "type": "types",
      "values": ["Debris", "FootstepSet", "LightingTemplate", "MaterialObject"],
      "comment": "PO3 introduces these custom types"
    }
  ]
}
