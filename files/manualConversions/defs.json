{
  "JsonUtil": [
    {
      "type": "import",
      "values": ["import { FileExists } from \"./MiscUtil\""]
    },
    {
      "type": "substitute",
      "display": "JsonExists",
      "find": "--s:functionWithBody",
      "file": "JsonUtil.JsonExists.ts"
    },
    {
      "type": "substitute",
      "display": "GetPathBoolValue",
      "find": "--s:functionWithBody",
      "expr": "export const GetPathBoolValue = (FileName: string, Path: string, missing: boolean = false): boolean => GetPathIntValue(FileName, Path, missing ? 1 : 0) != 0"
    }
  ],
  "NiOverride": [
    {
      "type": "substitute",
      "display": "GetScriptVersion",
      "find": "--s:functionReturnsInt",
      "expr": "export const GetScriptVersion = (): number => $1"
    },
    {
      "type": "substitute",
      "display": "SetMorphValue",
      "find": "--s:functionWithBody",
      "expr": "export const SetMorphValue = (ref: ObjectReference | null, morphName: string, value: number): void => sn.SetBodyMorph(ref, morphName, \"RSMLegacy\", value)"
    },
    {
      "type": "substitute",
      "display": "GetMorphValue",
      "find": "--s:functionWithBody",
      "expr": "export const GetMorphValue = (ref: ObjectReference | null, morphName: string): number => sn.GetBodyMorph(ref, morphName, \"RSMLegacy\")"
    },
    {
      "type": "substitute",
      "display": "ClearMorphValue",
      "find": "--s:functionWithBody",
      "expr": "export const ClearMorphValue = (ref: ObjectReference | null, morphName: string): void => sn.ClearBodyMorph(ref, morphName, \"RSMLegacy\")"
    },
    {
      "type": "import",
      "file": "NiOverride.enums.ts",
      "comment": "Enums to make life easier"
    },
    {
      "type": "headerComment",
      "file": "NiOverride.comment.txt",
      "comment": "Header talking about new enums"
    }
  ],
  "PapyrusUtil": [
    {
      "type": "substitute",
      "display": "GetScriptVersion",
      "find": "--s:functionReturnsInt",
      "expr": "export const GetScriptVersion = (): number => $1"
    },
    {
      "type": "substitute",
      "display": "ClearEmpty",
      "find": "--s:functionWithBody",
      "expr": "export const ClearEmpty = (ArrayValues: string[]): string[] => RemoveString(ArrayValues, \"\")"
    },
    {
      "type": "substitute",
      "display": "ClearNone",
      "find": "--s:functionWithBody",
      "expr": "export const ClearNone = (ArrayValues: (Form | null)[]): (Form | null)[] => RemoveForm(ArrayValues, null)"
    },
    {
      "type": "substitute",
      "display": "CountFalse",
      "find": "--s:functionWithBody",
      "expr": "export const CountFalse = (ArrayValues: boolean[]): number => CountBool(ArrayValues, false)"
    },
    {
      "type": "substitute",
      "display": "CountTrue",
      "find": "--s:functionWithBody",
      "expr": "export const CountTrue = (ArrayValues: boolean[]): number => CountBool(ArrayValues, true)"
    },
    {
      "type": "substitute",
      "display": "CountNone",
      "find": "--s:functionWithBody",
      "expr": "export const CountNone = (ArrayValues: (Form | null)[]): number => CountForm(ArrayValues, null)"
    },
    {
      "type": "substitute",
      "find": "(?isU)\\/\\*\\* ##\\n\\* ## Non-Native bool versions of some .*\\*\\/(.*)$",
      "expr": "/* ALL FUNCTIONS BELOW HERE ARE NO LONGER NEEDED IN TYPESCRIPT AND THEY ARE TOO MUCH WORK TO TRANSLATE $1*/",
      "comment1": "This will comment functions requiring manual translation, but no longer",
      "comment2": "really needed since we are now using Typescript"
    },
    {
      "type": "substitute",
      "find": "(?isU)\\/\\*\\* ##\\n\\* ## DEPRECATED: SKSE now provides their own variable sized .*\\*\\/(.*)$",
      "expr": "/* ALL FUNCTIONS BELOW HERE ARE NO LONGER NEEDED IN TYPESCRIPT AND THEY ARE TOO MUCH WORK TO TRANSLATE $1",
      "comment1": "This will comment functions requiring manual translation, but no longer",
      "comment2": "really needed since we are now using Typescript"
    },
    {
      "type": "headerComment",
      "file": "PapyrusUtil.comment.txt",
      "comment": "Header talking about general changes to this file"
    }
  ],
  "PO3_SKSEFunctions": [
    {
      "type": "import",
      "file": "PO3_SKSEFunctions.NewForms.ts",
      "comment": "Declaration of the new custom types"
    },
    {
      "type": "types",
      "values": ["Debris", "FootstepSet", "LightingTemplate", "MaterialObject"],
      "comment": "PO3 introduces these custom types"
    }
  ]
}
